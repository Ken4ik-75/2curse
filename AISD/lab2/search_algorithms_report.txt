Отчет по лабораторной работе №2: Методы поиска

1. Описание алгоритмов
---------------------
а) Бинарный поиск:
   - Работает только с отсортированным массивом
   - Сравнивает искомый элемент со средним элементом массива
   - Если средний элемент равен искомому, поиск завершен
   - Если средний элемент больше искомого, поиск продолжается в левой половине массива
   - Если средний элемент меньше искомого, поиск продолжается в правой половине массива
   - Временная сложность: O(log n)

б) Поиск по сбалансированному дереву (BST):
   - Использует структуру данных 'дерево' для организации элементов
   - В сбалансированном дереве (например, AVL или Red-Black) высота поддеревьев отличается не более чем на 1
   - Поиск выполняется путем сравнения с корнем и переходом в левое или правое поддерево
   - Временная сложность: O(log n)

в) Поиск хешированием:
   - Использует хеш-функцию для быстрого доступа к данным
   - Хеш-функция преобразует ключ в индекс массива
   - В идеальном случае позволяет найти элемент за O(1)
   - При коллизиях (одинаковый хеш для разных ключей) временная сложность может возрасти
   - Средняя временная сложность: O(1)

3. Результаты измерений будут представлены в графике

5. Выводы
---------
- Бинарный поиск демонстрирует хорошую производительность O(log n), но требует предварительной сортировки данных.
- Поиск по сбалансированному дереву также имеет сложность O(log n), но с немного большей константой из-за дополнительных операций.
- Поиск хешированием в среднем работает за O(1), что делает его наиболее эффективным для больших объемов данных.
- Для небольших объемов данных разница между алгоритмами может быть незначительной.
- Выбор алгоритма поиска зависит от конкретной задачи, структуры данных и требований к скорости/памяти.
